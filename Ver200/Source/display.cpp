//----------------------------------------------------------------------------

//Класс поддержки LED-дисплея

//----------------------- Используемые ресурсы: ------------------------------

//Используется дисплей из светодиодных линеек. Поддерживаются линейки на 35
//и на 50 элементов. В версии на 50 элементов дополнительно используется 10
//светодиодов, которые подсвечивают трафареты. Отдельно включается подсветка
//шкалы. Для исключения помех используется статическая индикация.
//Индикаторы и светодиоды подключены через цепочку сдвиговых регисторов,
//доступ к которым осуществляется через класс TSreg.

//----------------------------------------------------------------------------

#include "main.hpp"
#include "display.hpp"

//----------------------------------------------------------------------------
//---------------------------- Класс TDisplay --------------------------------
//----------------------------------------------------------------------------

//----------------------------- Конструктор: ---------------------------------

TDisplay::TDisplay(void)
{
  Sreg.Init(REGS);
  Clear();
  Update();
  Sreg.Enable(1);
}

//----------------------------------------------------------------------------
//------------------------- Интерфейсные методы: -----------------------------
//----------------------------------------------------------------------------

//--------------------------- Очистка дисплея: -------------------------------

void TDisplay::Clear(void)
{
  for(uint8_t i = 0; i < REGS; i++)
    RegData[i] = 0xFF;
  Leds(TRNON);
}

//-------------------------- Обновление дисплея: -----------------------------

void TDisplay::Update(void)
{
  Sreg.Load(RegData);
}

//-------------------- Включение сегмента для канала L: ----------------------

void TDisplay::SegL(uint8_t s, bool on)
{
  if(s < SEGS)
  {
    Regs_t Reg = SegsL[s].r;
    Outs_t Out = SegsL[s].q;
    if(on)
      RegData[Reg] &= ~(1 << Out);
        else RegData[Reg] |= (1 << Out);
  }
}

//-------------------- Включение сегмента для канала R: ----------------------

void TDisplay::SegR(uint8_t s, bool on)
{
  if(s < SEGS)
  {
    Regs_t Reg = SegsR[s].r;
    Outs_t Out = SegsR[s].q;
    if(on)
      RegData[Reg] &= ~(1 << Out);
        else RegData[Reg] |= (1 << Out);
  }
}

//-------------------- Включение столбика для канала L: ----------------------

void TDisplay::BarL(uint8_t n)
{
  for(uint8_t i = 0; i < SEGS; i++) SegL(i, i <= n);
}

//-------------------- Включение столбика для канала R: ----------------------

void TDisplay::BarR(uint8_t n)
{
  for(int i = 0; i < SEGS; i++) SegR(i, i <= n);
}

//------------------ Включение транспарантов и подсветки: --------------------

void TDisplay::Leds(uint16_t s)
{
  s ^= SCALE;
  for(uint8_t i = 0; i < TRS; i++)
  {
    Regs_t Reg = Transp[i].r;
    Outs_t Out = Transp[i].q;
    if(s & 1)
      RegData[Reg] &= ~(1 << Out);
        else RegData[Reg] |= (1 << Out);
    s = s >> 1;
  }
}

//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
//----------------------------------------------------------------------------
